# GitHub Action that verifies C++ source compliance with cpplint

name: Code Guidelines
on:
  push:
    paths:
      - sources/**.cpp
      - sources/**.h
  pull_request:
    paths:
      - sources/**.cpp
      - sources/**.h

jobs:
  cpplint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - run: python -m pip install cpplint
      - run: sudo update-alternatives --install /usr/bin/python python ${pythonLocation}/bin/python3.8 10
      - name: cpplint
        shell: python
        run: |
          import os
          import re
          import subprocess
          import sys
          import glob

          print("Python {}.{}.{}".format(*sys.version_info))

          print("cpplint:")
          result = subprocess.run(["cpplint", "--filter=-build/include_subdir,-build/c++11", "--linelength=120", "--root=sources", "--recursive", "sources"], text=True)
          if result.returncode:
            sys.exit(result.returncode)

          source_files = glob.glob('sources/**/*.*', recursive=True)
          cpp_exts = tuple(".c .c++ .cc .cpp .cu .cuh .cxx .h .h++ .hh .hpp .hxx".split())
          cpp_files = [file for file in source_files if file.lower().endswith(cpp_exts)]
          print(f"{len(cpp_files)} C++ files were found.")

          space_files = [file for file in cpp_files if " " in file]
          if space_files:
            print(f"{len(space_files)} files contain space character:")
            print("\n".join(space_files) + "\n")

          bad_files = len(space_files)
          if bad_files:
            sys.exit(bad_files)
