# GitHub Action to cross compile a YIO Remote Qt project for the YIO remote-os.
# Uses the pre-built Buildroot SDK from remote-os.

name: Cross Compile

on: [push]

env:
  APP_NAME: app
  PROJECT_NAME: remote-software

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
        - {
            name: "RPi0 Release Build", artifact: "remote-release",
            qmake-args: "CONFIG+=release"
          }
        - {
            name: "RPi0 Debug Build", artifact: "remote-debug",
            qmake-args: "CONFIG+=debug CONFIG+=qml_debug"
          }

    steps:
      - name: Checkout ${{ env.PROJECT_NAME}}
        uses: actions/checkout@v2
        with:
          # History of 500 should be more than enough to calculate commit count since last release tag.
          fetch-depth: 500
          path: ${{ env.PROJECT_NAME}}
      - name: Fetch all tags to determine version
        run: |
          cd ${{ env.PROJECT_NAME}}
          git fetch origin +refs/tags/*:refs/tags/*
          git describe --match "v[0-9]*" --tags HEAD --always

      - name: Set build timestamp
        run: echo "::set-env name=TIMESTAMP::$(date +"%Y%m%d_%H%M%S")"

      - name: Cross compile
        id: cross-compile
        uses: zehnm/yio-crosscompile-action@master
        with:
          project-name: ${{ env.PROJECT_NAME }}
          output-path: ${GITHUB_WORKSPACE}/binaries/app
          qmake-args: ${{ matrix.config.qmake-args }}

      - name: Upload build artefacts
        uses: actions/upload-artifact@v1
        with:
          path: binaries
          name: ${{ env.APP_NAME }}-${{ steps.cross-compile.outputs.project-version }}-${{ env.TIMESTAMP }}-${{ matrix.config.artifact }}
