{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://yio-remote.com/hardware.json",
  "title": "YIO remote hardware configuration schema",
  "$comment": "This schema is optimized for the YIO hardware only. Other platforms can define their own schema and configuration structure: The hardware.json file may only be used by the specific environment factory to initialize its drivers.",
  "definitions": {
    "enabled": {
      "type": "boolean",
      "title": "Enable device",
      "description": "A dummy implementation will be used if disabled",
      "default": true
    },
    "i2c": {
      "type": "object",
      "properties": {
        "device": {
          "type": "string",
          "title": "Device",
          "minLength": 1,
          "default": "/dev/i2c-3",
          "examples": [ "/dev/i2c-1" ]
        },
        "id": {
           "type": "integer",
           "title": "Device ID",
           "minimum": 1
        }
      },
      "required": ["device", "id"]
    },
    "gpio": {
      "type": "object",
      "properties": {
        "pin": {
           "type": "integer",
           "title": "GPIO pin",
           "minimum": 0
        }
      },
      "required": ["pin"]
    },
    "spi-over-gpio": {
      "description": "SPI emulation with GPIO pins",
      "type": "object",
      "properties": {
        "clk": {
           "type": "integer",
           "title": "Clock GPIO pin",
           "minimum": 0,
           "default": 107
        },
        "mosi": {
          "type": "integer",
          "title": "MOSI GPIO pin",
          "minimum": 0,
          "default": 106
        },
        "cs": {
          "type": "integer",
          "title": "Chip select GPIO pin",
          "minimum": 0,
          "default": 105
        }
      },
      "required": ["clk", "mosi", "cs"]
    }
  },
  "type": "object",
  "required": [
    "systemservice",
    "wifi",
    "webserver"
  ],
  "properties": {
    "display": {
      "type": "object",
      "title": "Display",
      "properties": {
        "control": {
          "properties": {
            "enabled": { "$ref": "#/definitions/enabled" },
            "backlight" : {
              "properties": {
                "gpio":  { "$ref": "#/definitions/gpio" }
              }
            },
            "spi-over-gpio":  { "$ref": "#/definitions/spi-over-gpio" }
          }
        }
      }
    },
    "gesture": {
      "type": "object",
      "title": "Gesture sensor",
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" }
      }
    },
    "light": {
      "type": "object",
      "title": "Ambient light sensor",
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" }
      }
    },
    "proximity": {
      "type": "object",
      "title": "Proximity sensor",
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "i2c":  { "$ref": "#/definitions/i2c" }
      }
    },
    "batteryCharger": {
      "type": "object",
      "title": "Battery charger",
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "gpio":  { "$ref": "#/definitions/gpio" }
      }
    },
    "batteryFuelGauge": {
      "type": "object",
      "title": "Battery fuel gauge",
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "i2c":  { "$ref": "#/definitions/i2c" }
      }
    },
    "buttonInterruptHandler": {
      "$comment": "1st MCP23017ML IO expander using an interrupt",
      "type": "object",
      "title": "IO expander 1",
      "description": "Used for all button using an interrupt handler",
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "i2c":  { "$ref": "#/definitions/i2c" },
        "interrupt": {
          "gpio":  { "$ref": "#/definitions/gpio" }
        }
      }
    },
    "wiringPi": {
      "$comment": "2nd MCP23017ML IO expander using WiringPi. The i2c device is determined by WiringPi. On remote-os this is patched to '/dev/i2c-3'!",
      "type": "object",
      "title": "IO expander 2",
      "description": "Used for display SPI and battery charger",
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "ioExpander": {
          "properties": {
            "pinBase": {
              "type":  "integer",
              "minimum": 65,
              "default": 100
            },
            "i2cId": {
              "type":  "integer",
              "minimum": 1,
              "default": 33
            }
          }
        }
      }
    },
    "hapticMotor": {
      "type": "object",
      "title": "Haptic motor",
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "i2c":  { "$ref": "#/definitions/i2c" }
      }
    },
    "systemservice": {
      "type": "object",
      "title": "System service control",
      "required": [
        "systemd"
      ],
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "systemd": {
          "type": "object",
          "title": "Systemd system service",
          "required": [
            "sudo",
            "timeout",
            "services"
          ],
          "properties": {
            "sudo": {
              "type": "boolean",
              "title": "Use sudo for systemd interactions",
              "default": false
            },
            "timeout": {
              "type": "integer",
              "minimum": -1,
              "title": "Interaction timeout",
              "description": "Timeout in milliseconds to wait for systemd interfactions, e.g. starting a service. If timeout is -1, the timeout is disabled",
              "default": 30000
            },
            "services": {
              "type": "object",
              "title": "Available services",
              "required": [
                "wifi",
                "dns",
                "webserver",
                "ntp",
                "dhcp",
                "zeroconf",
                "networking"
              ],
              "properties": {
                "wifi": {
                  "type": "string",
                  "title": "Wifi service",
                  "default": "",
                  "examples": [
                    "wpa_supplicant@wlan0.service"
                  ],
                  "pattern": "^(.*)$"
                },
                "dns": {
                  "type": "string",
                  "title": "Name resolution service",
                  "default": "",
                  "examples": [
                    "systemd-resolved.service"
                  ],
                  "pattern": "^(.*)$"
                },
                "webserver": {
                  "type": "string",
                  "title": "Webserver service",
                  "default": "",
                  "examples": [
                    "lighttpd.service"
                  ],
                  "pattern": "^(.*)$"
                },
                "ntp": {
                  "type": "string",
                  "title": "NTP service",
                  "default": "",
                  "examples": [
                    "systemd-timesyncd.service"
                  ],
                  "pattern": "^(.*)$"
                },
                "dhcp": {
                  "type": "string",
                  "title": "DHCP service",
                  "default": "",
                  "examples": [
                    "dhcpcd.service"
                  ],
                  "pattern": "^(.*)$"
                },
                "zeroconf": {
                  "type": "string",
                  "title": "Zeroconf service",
                  "default": "",
                  "examples": [
                    "avahi-daemon"
                  ],
                  "pattern": "^(.*)$"
                },
                "networking": {
                  "type": "string",
                  "title": "Networking service",
                  "default": "",
                  "examples": [
                    "systemd-networkd"
                  ],
                  "pattern": "^(.*)$"
                }
              }
            }
          }
        }
      }
    },
    "wifi": {
      "$id": "#/properties/wifi",
      "type": "object",
      "title": "WiFi control",
      "required": [
        "maxScanResults",
        "joinRetryCount",
        "joinRetryDelay",
        "pollInterval",
        "useShellScript",
        "interface",
        "accessPoint"
      ],
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "maxScanResults": {
          "type": "integer",
          "minimum": 0,
          "title": "Maximum number of scan results",
          "default": 30
        },
        "joinRetryCount": {
          "type": "integer",
          "minimum": 0,
          "title": "Number of AP connection attempts",
          "default": 5
        },
        "joinRetryDelay": {
          "type": "integer",
          "minimum": 500,
          "title": "Delay in milliseconds between connection attempts",
          "default": 3000
        },
        "pollInterval": {
          "type": "integer",
          "minimum": 1000,
          "title": "Status polling interval in milliseconds",
          "default": 30000
        },
        "useShellScript": {
          "type": "boolean",
          "title": "Shell scripts instead wpa_control interface",
          "default": false
        },
        "interface": {
          "type": "object",
          "title": "WiFi control interface configuration",
          "required": [
            "wpa_supplicant",
            "shellScript"
          ],
          "properties": {
            "wpa_supplicant": {
              "type": "object",
              "title": "wpa_supplicant control interface",
              "required": [
                "socketPath",
                "removeNetworksBeforeJoin"
              ],
              "properties": {
                "socketPath": {
                  "type": "string",
                  "title": "Socket for wpa_supplicant",
                  "default": "",
                  "examples": [
                    "/var/run/wpa_supplicant/wlan0"
                  ],
                  "pattern": "^(.*)$"
                },
                "removeNetworksBeforeJoin": {
                  "type": "boolean",
                  "title": "Remove configured networks before joining a new network",
                  "default": false
                }
              }
            },
            "shellScript": {
              "type": "object",
              "title": "WiFi control through shell scripts",
              "required": [
                "sudo",
                "timeout",
                "clearNetworks",
                "connect",
                "listNetworks",
                "startAP",
                "getSSID",
                "getIP",
                "getMAC",
                "getRSSI"
              ],
              "properties": {
                "sudo": {
                  "type": "boolean",
                  "title": "Use sudo to execute shell scripts",
                  "default": false
                },
                "timeout": {
                  "type": "integer",
                  "minimum": -1,
                  "title": "Script timeout",
                  "description": "Timeout in milliseconds to wait for script termination. If timeout is -1, the timeout is disabled.",
                  "default": 0,
                  "examples": [
                    30000
                  ]
                },
                "clearNetworks": {
                  "type": "string",
                  "title": "Clear networks script",
                  "default": "",
                  "examples": [
                    ""
                  ],
                  "pattern": "^(.*)$"
                },
                "connect": {
                  "type": "string",
                  "title": "Connect network script",
                  "default": "",
                  "examples": [
                    "/opt/yio/scripts/wifi_network_create.sh"
                  ],
                  "pattern": "^(.*)$"
                },
                "listNetworks": {
                  "type": "string",
                  "title": "List networks script",
                  "default": "",
                  "examples": [
                    "/opt/yio/scripts/wifi_network_list.sh"
                  ],
                  "pattern": "^(.*)$"
                },
                "startAP": {
                  "type": "string",
                  "title": "Start access point script",
                  "default": "",
                  "examples": [
                    "/opt/yio/scripts/reset-wifi.sh"
                  ],
                  "pattern": "^(.*)$"
                },
                "getSSID": {
                  "type": "string",
                  "title": "Get ssid script",
                  "default": "",
                  "examples": [
                    "/opt/yio/scripts/wifi_ssid.sh"
                  ],
                  "pattern": "^(.*)$"
                },
                "getIP": {
                  "type": "string",
                  "title": "Get ip address script",
                  "default": "",
                  "examples": [
                    "/opt/yio/scripts/wifi_ip.sh"
                  ],
                  "pattern": "^(.*)$"
                },
                "getMAC": {
                  "type": "string",
                  "title": "Get mac address script",
                  "default": "",
                  "examples": [
                    "cat /sys/class/net/wlan0/address"
                  ],
                  "pattern": "^(.*)$"
                },
                "getRSSI": {
                  "type": "string",
                  "title": "Get rssi script",
                  "default": "",
                  "examples": [
                    "/opt/yio/scripts/wifi_rssi.sh"
                  ],
                  "pattern": "^(.*)$"
                }
              }
            }
          }
        },
        "accessPoint": {
          "type": "object",
          "title": "WiFi accesspoint configuration",
          "required": [
          ]
        }
      }
    },
    "webserver": {
      "type": "object",
      "title": "Web server control",
      "required": [
        "lighttpd"
      ],
      "properties": {
        "enabled": { "$ref": "#/definitions/enabled" },
        "lighttpd": {
          "type": "object",
          "title": "Lighttpd web-server",
          "required": [
            "configFile",
            "wifiSetupConfig",
            "webConfiguratorConfig"
          ],
          "properties": {
            "configFile": {
              "type": "string",
              "title": "lighttpd configuration file",
              "default": "",
              "examples": [
                "/etc/lighttpd/lighttpd.conf"
              ],
              "pattern": "^(.*)$"
            },
            "wifiSetupConfig": {
              "type": "string",
              "title": "Configuration file to enable web-configurator",
              "default": "",
              "examples": [
                "/etc/lighttpd/lighttpd-wifisetup.conf"
              ],
              "pattern": "^(.*)$"
            },
            "webConfiguratorConfig": {
              "type": "string",
              "title": "Configuration file to enable wifi setup through web server portal",
              "default": "",
              "examples": [
                "/etc/lighttpd/lighttpd-config.conf"
              ],
              "pattern": "^(.*)$"
            }
          }
        }
      }
    }
  }
}
